apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: router
  namespace: system
  labels:
    control-plane: router
    app.kubernetes.io/name: router
    app.kubernetes.io/instance: router
    app.kubernetes.io/component: router
    app.kubernetes.io/created-by: router
    app.kubernetes.io/part-of: router
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: router
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: router
      labels:
        control-plane: router
        app: router
    spec:
      containers:
      - name: frr
        securityContext:
          capabilities:
            add: ["NET_ADMIN", "NET_RAW", "SYS_ADMIN", "NET_BIND_SERVICE"]
        image: quay.io/frrouting/frr:master
        env:
          - name: TINI_SUBREAPER
            value: "true"
        volumeMounts:
          - name: frr-sockets
            mountPath: /var/run/frr
          - name: frr-config
            mountPath: /etc/frr
        # The command is FRR's default entrypoint & waiting for the log file to appear and tailing it.
        # If the log file isn't created in 60 seconds the tail fails and the container is restarted.
        # This workaround is needed to have the frr logs as part of kubectl logs -c frr < k8s-frr-podname >.
        command:
          - /bin/sh
          - -c
          - |
            /sbin/tini -- /usr/lib/frr/docker-start &
            attempts=0
            until [[ -f /etc/frr/frr.log || $attempts -eq 60 ]]; do
              sleep 1
              attempts=$(( $attempts + 1 ))
            done
            tail -f /etc/frr/frr.log
      - name: reloader
        image: quay.io/frrouting/frr:master
        command: ["/etc/frr_reloader/reloader"]
        volumeMounts:
          - name: frr-sockets
            mountPath: /var/run/frr
          - name: frr-config
            mountPath: /etc/frr
          - name: reloader
            mountPath: /etc/frr_reloader
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      volumes:
        - name: frr-sockets
          emptyDir: {}
        - name: frr-startup
          configMap:
            name: frr-startup
        - name: reloader
          emptyDir: {}
        - name: frr-config
          hostPath:
            path: /etc/perouter/frr
            type: Directory
      initContainers:
        # Copies the initial config files with the right permissions to the shared volume.
        - name: cp-frr-files
          securityContext:
            runAsUser: 100
            runAsGroup: 101
          image: quay.io/frrouting/frr:master
          command: ["/bin/sh", "-c", "cp -rLf /tmp/frr/* /etc/frr/"]
          volumeMounts:
            - name: frr-startup
              mountPath: /tmp/frr
            - name: frr-config
              mountPath: /etc/frr
        # Copies the reloader to the shared volume between the k8s-frr controller and reloader.
        - name: cp-reloader
          image: router:latest
          command: ["/bin/sh", "-c", "cp -f /reloader /etc/frr_reloader/reloader"]
          volumeMounts:
            - name: reloader
              mountPath: /etc/frr_reloader
      serviceAccountName: perouter
      terminationGracePeriodSeconds: 10
      shareProcessNamespace: true
