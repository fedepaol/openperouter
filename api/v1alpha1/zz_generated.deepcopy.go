//go:build !ignore_autogenerated

// SPDX-License-Identifier:Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Neighbor) DeepCopyInto(out *Neighbor) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint16)
		**out = **in
	}
	if in.HoldTime != nil {
		in, out := &in.HoldTime, &out.HoldTime
		*out = new(v1.Duration)
		**out = **in
	}
	if in.KeepaliveTime != nil {
		in, out := &in.KeepaliveTime, &out.KeepaliveTime
		*out = new(v1.Duration)
		**out = **in
	}
	if in.ConnectTime != nil {
		in, out := &in.ConnectTime, &out.ConnectTime
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Neighbor.
func (in *Neighbor) DeepCopy() *Neighbor {
	if in == nil {
		return nil
	}
	out := new(Neighbor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Underlay) DeepCopyInto(out *Underlay) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Underlay.
func (in *Underlay) DeepCopy() *Underlay {
	if in == nil {
		return nil
	}
	out := new(Underlay)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Underlay) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnderlayList) DeepCopyInto(out *UnderlayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Underlay, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnderlayList.
func (in *UnderlayList) DeepCopy() *UnderlayList {
	if in == nil {
		return nil
	}
	out := new(UnderlayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UnderlayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnderlaySpec) DeepCopyInto(out *UnderlaySpec) {
	*out = *in
	if in.Neighbors != nil {
		in, out := &in.Neighbors, &out.Neighbors
		*out = make([]Neighbor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnderlaySpec.
func (in *UnderlaySpec) DeepCopy() *UnderlaySpec {
	if in == nil {
		return nil
	}
	out := new(UnderlaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnderlayStatus) DeepCopyInto(out *UnderlayStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnderlayStatus.
func (in *UnderlayStatus) DeepCopy() *UnderlayStatus {
	if in == nil {
		return nil
	}
	out := new(UnderlayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VNI) DeepCopyInto(out *VNI) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VNI.
func (in *VNI) DeepCopy() *VNI {
	if in == nil {
		return nil
	}
	out := new(VNI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VNI) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VNIList) DeepCopyInto(out *VNIList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VNI, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VNIList.
func (in *VNIList) DeepCopy() *VNIList {
	if in == nil {
		return nil
	}
	out := new(VNIList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VNIList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VNISpec) DeepCopyInto(out *VNISpec) {
	*out = *in
	in.LocalNeighbor.DeepCopyInto(&out.LocalNeighbor)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VNISpec.
func (in *VNISpec) DeepCopy() *VNISpec {
	if in == nil {
		return nil
	}
	out := new(VNISpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VNIStatus) DeepCopyInto(out *VNIStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VNIStatus.
func (in *VNIStatus) DeepCopy() *VNIStatus {
	if in == nil {
		return nil
	}
	out := new(VNIStatus)
	in.DeepCopyInto(out)
	return out
}
